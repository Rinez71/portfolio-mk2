/** @jsxRuntime classic */
/** @jsx jsx */
import { css, jsx } from '@emotion/react';
import {
  Container,
  CssBaseline,
  Grid,
  Typography,
  TextField,
  Paper,
  Button,
} from '@mui/material';
import Head from 'next/head';
import React from 'react';
import Header from '../components/Layout/Header';
import { background, container } from './about';
import * as Yup from 'yup';
import ReCAPTCHA from 'react-google-recaptcha';
import {
  Formik,
  FormikHelpers,
  FormikProps,
  Form,
  Field,
  FieldProps,
} from 'formik';

interface ContactForm {
  fullName: string;
  email: string;
  subject: string;
  message: string;
}

const initialValues: ContactForm = {
  fullName: '',
  email: '',
  subject: '',
  message: '',
};

const Contact: React.FC = () => {
  const handleSubmit = async (values: any) => {
    fetch('/api/mail', {
      method: 'POST',
      body: JSON.stringify(values),
    });
  };

  const validator = Yup.object().shape({
    fullName: Yup.string().required('Full Name is required'),
    email: Yup.string()
      .email('Please provide a valid email')
      .required('email is required'),
    subject: Yup.string().required('Please provide a subject for your message'),
    message: Yup.string()
      .required('Please provide a subject for your message')
      .max(2000),
  });
  return (
    <>
      <Head>
        <title>Contact | Robert Inez</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <CssBaseline />
      <Header header='Contact' />
      <main css={background}>
        <Container css={container}>
          <Grid
            container
            justifyContent='center'
            alignItems='center'
            spacing={2}
            direction='row'
          >
            <Grid item md={8}>
              <Paper sx={{ padding: '2rem' }}>
                <Formik
                  initialValues={initialValues}
                  onSubmit={handleSubmit}
                  // onSubmit={(values) => {
                  //   console.log(JSON.stringify(values));
                  // }}
                  validationSchema={validator}
                >
                  {({ values }) => (
                    <Form>
                      <Field
                        name='fullName'
                        id='fullName'
                        placeholder='Paul Fernandez'
                        as={TextField}
                        label='Full Name'
                        margin='normal'
                        fullWidth
                      />
                      <Field
                        name='email'
                        id='email'
                        type='email'
                        placeholder='Email'
                        as={TextField}
                        label='Email'
                        margin='normal'
                        fullWidth
                      />
                      <Field
                        name='subject'
                        id='subject'
                        placeholder='Subject'
                        as={TextField}
                        label='Subject'
                        margin='normal'
                        fullWidth
                      />
                      <Field
                        name='message'
                        id='message'
                        placeholder='Message'
                        as={TextField}
                        label='Message'
                        margin='normal'
                        multiline
                        maxRows={6}
                        fullWidth
                      />
                      <pre>{JSON.stringify(values, null, 4)}</pre>
                      <ReCAPTCHA
                        size='normal'
                        sitekey='6Ldy_dcaAAAAAIguzD0JWmx6z61FIBUJ3LX0Ro_o'
                      />
                      <Button type='submit'>Submit</Button>
                    </Form>
                  )}
                </Formik>
              </Paper>
            </Grid>
          </Grid>
        </Container>
      </main>
    </>
  );
};

export default Contact;
